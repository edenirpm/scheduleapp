unit Controller.FrmAgendaDiaFuncionario;

interface
uses
 model.agendar,model.funcionario, FMX.ListView;
Type
IController = interface
['{86ADA9C9-B7C3-4554-B361-A22ECEE0275B}']
procedure ShowForm;
function ListarFuncionarios(AListView:TListview):IController;
function EscolherFuncionario(AIndex:integer):TFuncionario;
function DataSelecionada:Tdate;
end;

TController = class(TInterfacedObject,IController)
procedure ShowForm;
function ListarFuncionarios(AListView:TListview):IController;
function EscolherFuncionario(AIndex:integer):TFuncionario;
function DataSelecionada:Tdate;
end;

implementation
uses
 UfrmAgendar, FMX.Forms;
{ TController }

function TController.DataSelecionada:Tdate;
var
 Agendar:Tagendar;
begin
 Agendar:=TAgendar.GetInstance;
 Result:= Agendar.DataSelecionada;
end;

function TController.EscolherFuncionario(AIndex:integer): TFuncionario;
var
 Agendar:TAgendar;
begin
  agendar:=TAgendar.GetInstance;
  agendar.IndexFuncionario:=Aindex;
  Result:=Agendar.Funcionarios[Aindex];
end;

function TController.ListarFuncionarios(AListView: TListview): IController;
var
 Agendar:TAgendar;
 Funcionario:TFuncionario;
begin
 Agendar:=TAgendar.GetInstance;
 AListview.Items.Clear;
 for Funcionario  in Agendar.Funcionarios do
      begin
       with AListview.Items.Add do
        begin
         Data['Nome']:= Funcionario.Nome;
        end;
      end;
end;

procedure TController.ShowForm;
begin
  Application.CreateForm(TFrmAgendar, FrmAgendar);
  FrmAgendar.show;
end;

end.
